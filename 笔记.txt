webpack：
    基于模块化开发的一个工程化开发工具，任何资源（图片、css等）都可以作为模块加载进来（加载机loader）
    基于commonJS规范的，也支持amd，cmd规范。建议使用commonJS规范。
    webpack由react推动，react相关demo都是基于webpack，react的相关处理的插件，webpack是最丰富的。

    //在webpack的配置文件中，通常将配置暴露在接口中
    module.exports = {
        //定义配置文件
        //定义入口文件
        entry:"./js/app.js",
        //定义文件发布的位置
        output:{
            filename:"demo/dest.js"
        }
    }

    Entry定义入口文件：
        可以是字符串，表示一个入口文件

        也可以是一个对象：定义多个入口文件
            key：表示入口文件的名称（发布的）
            value：项目开发中的真实地址

    output定义文件发布的位置：
        值是一个对象
        path：定义发布的目录，如果不定义该属性，该路径可以写在filename属性中。
        filename：定义要发布的文件的地址（通常与entry对应）。
            当entry定义为对象时，（此时入口文件有多个），要将filename定义为[name].js。

    webpack服务器插件：webpack-dev-server
        通过这个服务器，可以预览项目
        webpack-dev-server指令将项目发布到服务器

    webpack可以加载任何资源（CSS，图片等等）
    加载资源需要在module属性中定义加载配置（指定加载器）
        在module属性中，通过定义loaders定义加载器：
            属性值是一个数组，每一个成员代表一个配置。
                通过test定义匹配的规则(正则表达式)，通过loader定义加载器
                通过！级联多个加载器

    加载CSS需要两个加载器：
        style-loader
        css-loader

        样式文件默认加载到header标签内


    模块化加载图片：
        图片加载器：url-loader
            两种加载方式：
                1.图片嵌入文件内部（图片转换为base64格式）
                2.图片作为一个资源嵌入（图片路径引入）
        在webpack中，在url-loader中定义limit参数，决定采取哪种方式引入。
            语法：url-loader?limit=2048
                ?定义加载器的参数配置
                2048单位是b，2048表示2kb

                图片小于2kb，采取内嵌式加载图片
                图片大于2kb，采取外联式加载图片

    JS压缩：通过插件完成。
        直接配置plugins使用
            属性值为一个数组，每一个成员代表一个插件。